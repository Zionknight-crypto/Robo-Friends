{"version":3,"sources":["Components/Card/Card.js","Components/Card/CardList.js","Components/SearchBox/SearchBox.js","Components/Robots/Robots.js","Components/Scroll/Scroll.js","Components/ErrorBoundry/ErrorBoundry.js","App.js","index.js"],"names":["Card","name","email","username","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","padding","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uOAgBeA,EAdF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GAElC,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKH,GACL,4BAAKE,GACL,4BAAKD,MCYNM,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,kBAAC,EAAD,CACAC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdH,KAAMQ,EAAOG,GAAGX,KAChBE,SAAUM,EAAOG,GAAGT,SACpBD,MAAOO,EAAOG,GAAGV,aCCtBY,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,yBAAKX,UAAU,OACX,2BACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCkEXP,EA1EA,CAEX,CACIL,GAAI,EACJH,KAAM,OACNE,SAAU,QACVD,MAAO,sBAGH,CACIE,GAAI,EACJH,KAAM,SACNE,SAAU,SACVD,MAAO,4BAGH,CACIE,GAAI,EACJH,KAAM,SACNE,SAAU,YACVD,MAAO,wBAGH,CACIE,GAAI,EACJH,KAAM,UACNE,SAAU,WACVD,MAAO,2BAGH,CACIE,GAAI,EACJH,KAAM,OACNE,SAAU,QACVD,MAAO,iCAGH,CACIE,GAAI,EACJH,KAAM,SACNE,SAAU,eACVD,MAAO,sBAGH,CACIE,GAAI,EACJH,KAAM,MACNE,SAAU,YACVD,MAAO,wBAGH,CACIE,GAAI,EACJH,KAAM,MACNE,SAAU,YACVD,MAAO,4BAGH,CACIE,GAAI,EACJH,KAAM,OACNE,SAAU,OACVD,MAAO,wBAGH,CACIE,GAAI,GACJH,KAAM,OACNE,SAAU,kBACVD,MAAO,6BC1DxEkB,EAVA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,QAAS,WACnFL,EAAMM,WCgBJC,E,YAlBX,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTC,UAAU,GAHC,E,+EAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAGjC,OAAIG,KAAKJ,MAAMC,SACJ,sEAEJG,KAAKZ,MAAMM,a,GAfSQ,aC4CZC,G,kBArCX,aAAe,IAAD,8BACV,+CAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,SAZzC,EAAKX,MAAQ,CACTpB,OAAQA,EACRM,YAAa,IAJP,E,sEAgBJ,IAAD,EACyBkB,KAAKJ,MAA5BpB,EADF,EACEA,OAAQM,EADV,EACUA,YACT0B,EAAiBhC,EAAOiC,QAAO,SAAAjC,GACrC,OAAOA,EAAOR,KAAK0C,cAAcC,SAAS7B,EAAY4B,kBAEtD,OAAQlC,EAAOoC,OAGX,yBAAKxC,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAciB,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU5B,OAAQgC,OAP9B,8C,GAvBMN,c,MCAlBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7e4970b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, username, id}) => {  // even shorter destructuring within the parameter field (works automatically)\r\n    // const {name, email, username, id} = props; general destructuring\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h3>{username}</h3>\r\n                <h5>{email}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n          {\r\n            robots.map((user,i) => {\r\n                return (\r\n                    <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    username={robots[i].username} \r\n                    email={robots[i].email}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n        </div>    \r\n    );\r\n}\r\nexport default CardList;\r\n\r\n// can do it like below or then return everything within the div like above\r\n// const cardsArray = Robots.map((user,i) => {\r\n// return (<Card key={i} id={Robots[i].id} name={Robots[i].name} username={Robots[i].username} email={Robots[i].email}/>;\r\n// })","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","\r\nconst robots = [\r\n\r\n    {\r\n        id: 1,\r\n        name: 'Gary',\r\n        username: 'Raggy',\r\n        email: 'raggybun@gmail.com'\r\n        \r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Wesley',\r\n                username: 'Norton',\r\n                email: 'nortonanti_kak@gmail.com'\r\n                \r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: 'Daniel',\r\n                        username: 'Sephiroth',\r\n                        email: 'solidsnake@gmail.com'\r\n                        \r\n                            },\r\n                            {\r\n                                id: 4,\r\n                                name: 'Richard',\r\n                                username: 'DjRipple',\r\n                                email: 'saywayohwayoh@gmail.com'\r\n                                \r\n                                    },\r\n                                    {\r\n                                        id: 5,\r\n                                        name: 'Nick',\r\n                                        username: 'Katte',\r\n                                        email: 'chickenNuggets4life@gmail.com'\r\n                                        \r\n                                            },\r\n                                            {\r\n                                                id: 6,\r\n                                                name: 'Thomas',\r\n                                                username: 'TommyGoFinga',\r\n                                                email: 'IpokeYou@gmail.com'\r\n                                                \r\n                                                    },\r\n                                                    {\r\n                                                        id: 7,\r\n                                                        name: 'Edu',\r\n                                                        username: 'MAlakaaaa',\r\n                                                        email: 'fetaIsbeta@gmail.com'\r\n                                                        \r\n                                                            },\r\n                                                            {\r\n                                                                id: 8,\r\n                                                                name: 'Rab',\r\n                                                                username: 'NakedChef',\r\n                                                                email: 'flipItrealGuud@gmail.com'\r\n                                                                \r\n                                                                    },\r\n                                                                    {\r\n                                                                        id: 9,\r\n                                                                        name: 'Dave',\r\n                                                                        username: 'Zion',\r\n                                                                        email: 'Zionknight@gmail.com'\r\n                                                                        \r\n                                                                            },\r\n                                                                            {\r\n                                                                                id: 10,\r\n                                                                                name: 'Alex',\r\n                                                                                username: 'GandalfIsFluffy',\r\n                                                                                email: 'RockingMethods@gmail.com'\r\n                                                                                \r\n                                                                                    }\r\n];\r\n\r\nexport default robots;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '2px solid black', height: '800px', padding: '1rem 0'}} >\r\n            {props.children}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Scroll;\r\n\r\n// props.children allows for scrolling through child components without scrolling through the entire page. ","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }    \r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n    render() {\r\nif (this.state.hasError) {\r\n    return <h1>Ooooops. That was not meant to happen.</h1>\r\n}\r\nreturn this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from './Components/Card/CardList.js';\r\nimport SearchBox from './Components/SearchBox/SearchBox.js';\r\nimport robots from './Components/Robots/Robots.js';\r\nimport Scroll from './Components/Scroll/Scroll.js';\r\nimport ErrorBoundry from './Components/ErrorBoundry/ErrorBoundry'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: robots,  // change robots to [] if you want to use API\r\n            searchfield: ''\r\n        }     \r\n    }\r\n    // In case you want to fetch an api\r\n    // componentDidMount() {\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //     .then(response => response.json())\r\n    //     .then(users => this.setState({ robots: users}));  \r\n    // }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value })   \r\n    }\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n        return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading...</h1> :\r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );   \r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n// Props come from state and don't change\r\n// State is an object that describes your application","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n\n"],"sourceRoot":""}